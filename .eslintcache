[{"C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\index.js":"1","C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\App.js":"2","C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\reportWebVitals.js":"3","C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\Buttons.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":556,"mtime":1606941978291,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":10038,"mtime":1607197544640,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1fdz3o",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\index.js",[],["20","21"],"C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\App.js",[],"C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\reportWebVitals.js",[],"C:\\Users\\matth\\Documents\\Code\\The-Dev\\react-calculator\\calculator\\src\\Buttons.js",["22"],"import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentSelection: \"\",\r\n      resultHistory: [],\r\n    };\r\n  }\r\n\r\n  // Add number or operator to currentSelection\r\n  addNumOrOp(char) {\r\n    // Check if char is a number and the last result is still the currentSelection\r\n    if (\r\n      this.state.currentSelection ===\r\n        this.state.resultHistory[this.state.resultHistory.length - 1] &&\r\n      !isNaN(char)\r\n    ) {\r\n      this.clear();\r\n    }\r\n\r\n    // Check if first addition to string is an operator\r\n    var re = /[+\\-*/]/g;\r\n\r\n    if (char.match(re) && this.state.currentSelection === \"\") {\r\n      return;\r\n    }\r\n    // If char is an operator and the last item in the string is an operator replace the last value\r\n    else if (\r\n      char.match(re) &&\r\n      this.state.currentSelection[this.state.currentSelection.length - 1].match(\r\n        re\r\n      )\r\n    ) {\r\n      this.setState((state) => {\r\n        return {\r\n          currentSelection:\r\n            state.currentSelection.slice(0, state.currentSelection.length - 1) +\r\n            char,\r\n        };\r\n      });\r\n    }\r\n    // Otherwise add char to the current string\r\n    else {\r\n      this.setState((state) => {\r\n        return {\r\n          currentSelection: state.currentSelection + char,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  // Evalulate the currentSelection string\r\n  calculate() {\r\n    var equation = this.state.currentSelection;\r\n\r\n    // Check string is only contains valid characters\r\n    equation = equation.replace(/[^-()\\d/*+.]/g, \"\");\r\n\r\n    var re = /[+\\-*/.]/g;\r\n\r\n    // Remove unwanted operators and decimal places at the end of the string\r\n    while (equation[equation.length - 1].match(re)) {\r\n      equation = equation.slice(0, equation.length - 1);\r\n    }\r\n\r\n    // Check for too many decimal places in a number\r\n    re = /[+\\-*/]/g;\r\n    var nums = equation.split(re);\r\n    nums.forEach((num) => {\r\n      if (num.includes(\".\")) {\r\n        var subNum = num.split(\".\");\r\n        if (subNum.length > 2) {\r\n          equation = \"\";\r\n          this.setState(() => {\r\n            return {\r\n              currentSelection: \"\",\r\n            };\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // Check if equation is not undefined\r\n    if (equation) {\r\n      // Evalulate the string\r\n      var answer = eval(equation);\r\n\r\n      this.setState((state) => {\r\n        return {\r\n          currentSelection: String(answer),\r\n          resultHistory: state.resultHistory.concat(String(answer)),\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  // Clear the currentSelection\r\n  clear() {\r\n    this.setState(() => {\r\n      return {\r\n        currentSelection: \"\",\r\n      };\r\n    });\r\n  }\r\n\r\n  // Change sign if only one number is in the string\r\n  changeSign() {\r\n    var re = /[+\\-*/]/g;\r\n    var nums = this.state.currentSelection.split(re);\r\n    if (nums.length === 1) {\r\n      this.setState(() => {\r\n        return {\r\n          currentSelection: \"-\" + nums[0],\r\n        };\r\n      });\r\n    } else if (nums.length === 2 && nums[0] === \"\") {\r\n      this.setState(() => {\r\n        return {\r\n          currentSelection: nums[1],\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <br />\r\n        <Row>\r\n          <Col className=\"text-right\">\r\n            <Card>\r\n              <Card.Body id=\"results-box\">\r\n                <h1> {this.state.currentSelection} </h1>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Card>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col xs={10}>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"seven\"\r\n                        onClick={() => this.addNumOrOp(\"7\")}\r\n                      >\r\n                        <h1>7</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"eight\"\r\n                        onClick={() => this.addNumOrOp(\"8\")}\r\n                      >\r\n                        <h1>8</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"nine\"\r\n                        onClick={() => this.addNumOrOp(\"9\")}\r\n                      >\r\n                        <h1>9</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"divide\"\r\n                        onClick={() => this.addNumOrOp(\"/\")}\r\n                      >\r\n                        <h1>รท</h1>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"four\"\r\n                        onClick={() => this.addNumOrOp(\"4\")}\r\n                      >\r\n                        <h1>4</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"five\"\r\n                        onClick={() => this.addNumOrOp(\"5\")}\r\n                      >\r\n                        <h1>5</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"six\"\r\n                        onClick={() => this.addNumOrOp(\"6\")}\r\n                      >\r\n                        <h1>6</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"multiply\"\r\n                        onClick={() => this.addNumOrOp(\"*\")}\r\n                      >\r\n                        <h1>x</h1>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"one\"\r\n                        onClick={() => this.addNumOrOp(\"1\")}\r\n                      >\r\n                        <h1>1</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"two\"\r\n                        onClick={() => this.addNumOrOp(\"2\")}\r\n                      >\r\n                        <h1>2</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"three\"\r\n                        onClick={() => this.addNumOrOp(\"3\")}\r\n                      >\r\n                        <h1>3</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"minus\"\r\n                        onClick={() => this.addNumOrOp(\"-\")}\r\n                      >\r\n                        <h1>โ</h1>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"plus-minus\"\r\n                        onClick={() => this.changeSign()}\r\n                      >\r\n                        <h1>ยฑ</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"zero\"\r\n                        onClick={() => this.addNumOrOp(\"0\")}\r\n                      >\r\n                        <h1>0</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"point\"\r\n                        onClick={() => this.addNumOrOp(\".\")}\r\n                      >\r\n                        <h1>.</h1>\r\n                      </Button>\r\n                    </Col>\r\n                    <Col>\r\n                      <Button\r\n                        variant=\"info\"\r\n                        id=\"plus\"\r\n                        onClick={() => this.addNumOrOp(\"+\")}\r\n                      >\r\n                        <h1>+</h1>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Col>\r\n              <Col xs={2}>\r\n                <Button\r\n                  variant=\"info\"\r\n                  id=\"equals\"\r\n                  onClick={() => this.calculate()}\r\n                >\r\n                  <h1>=</h1>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <br />\r\n            <Row className=\"justify-content-center\">\r\n              <Button\r\n                variant=\"info\"\r\n                id=\"\"\r\n                className=\"clear\"\r\n                onClick={() => this.clear()}\r\n              >\r\n                <h1>Clear</h1>\r\n              </Button>\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":93,"column":20,"nodeType":"29","messageId":"30","endLine":93,"endColumn":24},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]